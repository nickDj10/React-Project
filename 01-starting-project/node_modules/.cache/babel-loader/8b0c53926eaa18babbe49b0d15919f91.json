{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NikolaPC\\\\OneDrive\\\\Desktop\\\\GitHub-React\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (existingCartItem) {\n      updateItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updateItems = [...state.items];\n      updateItems[existingCartItemIndex] = updateItems;\n    }\n\n    const updateItems = state.items.concat(action.item);\n    return {\n      items: updateItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaultValues;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultValues);\n\n  const addItemHandler = item => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"O6xFNmXcI1vRtRyzvSUacyr241w=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","defaultValues","items","totalAmount","cartReducer","state","action","type","updateTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","updateItem","updateItems","concat","CartProvider","props","cartState","dispatchCart","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/NikolaPC/OneDrive/Desktop/GitHub-React/01-starting-project/src/store/CartProvider.js"],"sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultValues = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updateTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n    let updatedItem;\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      updateItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updateItems = [...state.items];\r\n      updateItems[existingCartItemIndex] = updateItems;\r\n    }\r\n\r\n    const updateItems = state.items.concat(action.item);\r\n    return {\r\n      items: updateItems,\r\n      totalAmount: updateTotalAmount,\r\n    };\r\n  }\r\n  return defaultValues;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultValues);\r\n\r\n  const addItemHandler = (item) => {\r\n    dispatchCart({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemHandler = (id) => {\r\n    dispatchCart({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EADa;EAEpBC,WAAW,EAAE;AAFO,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,iBAAiB,GACrBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD;IAGA,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC3BJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADN,CAA9B;IAGA,MAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;IAEA,IAAII,WAAJ;IACA,IAAIC,YAAJ;;IAEA,IAAIF,gBAAJ,EAAsB;MACpBG,UAAU,GAAG,EACX,GAAGH,gBADQ;QAEXJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;MAFnC,CAAb;MAIAQ,WAAW,GAAG,CAAC,GAAGd,KAAK,CAACH,KAAV,CAAd;MACAiB,WAAW,CAACP,qBAAD,CAAX,GAAqCO,WAArC;IACD;;IAED,MAAMA,WAAW,GAAGd,KAAK,CAACH,KAAN,CAAYkB,MAAZ,CAAmBd,MAAM,CAACG,IAA1B,CAApB;IACA,OAAO;MACLP,KAAK,EAAEiB,WADF;MAELhB,WAAW,EAAEK;IAFR,CAAP;EAID;;EACD,OAAOP,aAAP;AACD,CA7BD;;AA+BA,MAAMoB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BxB,UAAU,CAACI,WAAD,EAAcH,aAAd,CAA5C;;EAEA,MAAMwB,cAAc,GAAIhB,IAAD,IAAU;IAC/Be,YAAY,CAAC;MAAEjB,IAAI,EAAE,KAAR;MAAeE,IAAI,EAAEA;IAArB,CAAD,CAAZ;EACD,CAFD;;EAIA,MAAMiB,iBAAiB,GAAIZ,EAAD,IAAQ;IAChCU,YAAY,CAAC;MAAEjB,IAAI,EAAE,QAAR;MAAkBO,EAAE,EAAEA;IAAtB,CAAD,CAAZ;EACD,CAFD;;EAIA,MAAMa,WAAW,GAAG;IAClBzB,KAAK,EAAEqB,SAAS,CAACrB,KADC;IAElBC,WAAW,EAAEoB,SAAS,CAACpB,WAFL;IAGlByB,OAAO,EAAEH,cAHS;IAIlBI,UAAU,EAAEH;EAJM,CAApB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UACGL,KAAK,CAACQ;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}